"""
–ó–∞–≤–¥–∞–Ω–Ω—è 4: –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∑ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é

–°–∏—Å—Ç–µ–º–∞ –¥–æ–∑–≤–æ–ª—è—î:
- –°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏
- –î–æ–¥–∞–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ (–Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∞ –≤–∫–ª–∞–¥–µ–Ω—ñ—Å—Ç—å)
- –í–∏–¥–∞–ª—è—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ (–∑–∞–ª–∏—à–∞—é—á–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ)
- –í–∏–≤–æ–¥–∏—Ç–∏ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
"""

class Comment:
    """
    –ö–ª–∞—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è –≤ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤.
    
    Attributes:
        text (str): –¢–µ–∫—Å—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        author (str): –ê–≤—Ç–æ—Ä –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        replies (list): –°–ø–∏—Å–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –Ω–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä
        is_deleted (bool): –ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î —á–∏ –±—É–≤ –∫–æ–º–µ–Ω—Ç–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–∏–π
    """
    
    def __init__(self, text, author):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –Ω–æ–≤–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä.
        
        Args:
            text (str): –¢–µ–∫—Å—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è
            author (str): –ê–≤—Ç–æ—Ä –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        """
        self.text = text
        self.author = author
        self.replies = []
        self.is_deleted = False
    
    def add_reply(self, reply):
        """
        –î–æ–¥–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—è.
        
        Args:
            reply (Comment): –û–±'—î–∫—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        """
        if not isinstance(reply, Comment):
            raise TypeError("–í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –æ–±'—î–∫—Ç–æ–º –∫–ª–∞—Å—É Comment")
        
        self.replies.append(reply)
    
    def remove_reply(self):
        """
        –í–∏–¥–∞–ª—è—î –∫–æ–º–µ–Ω—Ç–∞—Ä, –∑–∞–º—ñ–Ω—é—é—á–∏ –π–æ–≥–æ —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—é—á–∏ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å is_deleted –≤ True.
        
        –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –Ω–µ–∑–º—ñ–Ω–Ω–∏–º–∏.
        """
        self.text = "–¶–µ–π –∫–æ–º–µ–Ω—Ç–∞—Ä –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ."
        self.is_deleted = True
    
    def display(self, indent=0):
        """
        –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–≤–æ–¥–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä —Ç–∞ –≤—Å—ñ –π–æ–≥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        –∑ –≤—ñ–¥—Å—Ç—É–ø–∞–º–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏.
        
        Args:
            indent (int): –†—ñ–≤–µ–Ω—å –≤—ñ–¥—Å—Ç—É–ø—É (–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–±—ñ–ª—ñ–≤)
        """
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥—Å—Ç—É–ø
        spacing = "    " * indent
        
        # –í–∏–≤–æ–¥–∏–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä
        if self.is_deleted:
            print(f"{spacing}{self.text}")
        else:
            print(f"{spacing}{self.author}: {self.text}")
        
        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–≤–æ–¥–∏–º–æ –≤—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        for reply in self.replies:
            reply.display(indent + 1)
    
    def count_replies(self):
        """
        –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π (–≤–∫–ª—é—á–Ω–æ –∑ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏).
        
        Returns:
            int: –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
        """
        total = len(self.replies)
        for reply in self.replies:
            total += reply.count_replies()
        return total
    
    def get_all_authors(self):
        """
        –ü–æ–≤–µ—Ä—Ç–∞—î –º–Ω–æ–∂–∏–Ω—É –≤—Å—ñ—Ö —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∞–≤—Ç–æ—Ä—ñ–≤ —É —Ü—å–æ–º—É –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö.
        
        Returns:
            set: –ú–Ω–æ–∂–∏–Ω–∞ —ñ–º–µ–Ω –∞–≤—Ç–æ—Ä—ñ–≤
        """
        authors = set()
        
        # –î–æ–¥–∞—î–º–æ –∞–≤—Ç–æ—Ä–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—è, —è–∫—â–æ –≤—ñ–Ω –Ω–µ –≤–∏–¥–∞–ª–µ–Ω–∏–π
        if not self.is_deleted:
            authors.add(self.author)
        
        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∑–±–∏—Ä–∞—î–º–æ –∞–≤—Ç–æ—Ä—ñ–≤ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
        for reply in self.replies:
            authors.update(reply.get_all_authors())
        
        return authors
    
    def find_replies_by_author(self, author):
        """
        –ó–Ω–∞—Ö–æ–¥–∏—Ç—å –≤—Å—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –ø–µ–≤–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞.
        
        Args:
            author (str): –Ü–º'—è –∞–≤—Ç–æ—Ä–∞ –¥–ª—è –ø–æ—à—É–∫—É
            
        Returns:
            list: –°–ø–∏—Å–æ–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ —Ü—å–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
        """
        found_comments = []
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä
        if not self.is_deleted and self.author == author:
            found_comments.append(self)
        
        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —à—É–∫–∞—î–º–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö
        for reply in self.replies:
            found_comments.extend(reply.find_replies_by_author(author))
        
        return found_comments
    
    def get_max_depth(self):
        """
        –ü–æ–≤–µ—Ä—Ç–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –≥–ª–∏–±–∏–Ω—É –≤–∫–ª–∞–¥–µ–Ω–æ—Å—Ç—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π.
        
        Returns:
            int: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≥–ª–∏–±–∏–Ω–∞
        """
        if not self.replies:
            return 1
        
        max_reply_depth = max(reply.get_max_depth() for reply in self.replies)
        return 1 + max_reply_depth
    
    def to_dict(self):
        """
        –ö–æ–Ω–≤–µ—Ä—Ç—É—î –∫–æ–º–µ–Ω—Ç–∞—Ä —Ç–∞ –≤—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó.
        
        Returns:
            dict: –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è —É –≤–∏–≥–ª—è–¥—ñ —Å–ª–æ–≤–Ω–∏–∫–∞
        """
        return {
            'text': self.text,
            'author': self.author,
            'is_deleted': self.is_deleted,
            'replies': [reply.to_dict() for reply in self.replies]
        }
    
    @classmethod
    def from_dict(cls, data):
        """
        –°—Ç–≤–æ—Ä—é—î –∫–æ–º–µ–Ω—Ç–∞—Ä –∑ —Å–ª–æ–≤–Ω–∏–∫–∞.
        
        Args:
            data (dict): –î–∞–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—è
            
        Returns:
            Comment: –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–∏–π –æ–±'—î–∫—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        """
        comment = cls(data['text'], data['author'])
        comment.is_deleted = data.get('is_deleted', False)
        
        for reply_data in data.get('replies', []):
            reply = cls.from_dict(reply_data)
            comment.add_reply(reply)
        
        return comment


def create_sample_discussion():
    """–°—Ç–≤–æ—Ä—é—î –ø—Ä–∏–∫–ª–∞–¥ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó"""
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä
    root_comment = Comment("–Ø–∫–∞ —á—É–¥–æ–≤–∞ –∫–Ω–∏–≥–∞!", "–ë–æ–¥—è")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è
    reply1 = Comment("–ö–Ω–∏–≥–∞ –ø–æ–≤–Ω–µ —Ä–æ–∑—á–∞—Ä—É–≤–∞–Ω–Ω—è :(", "–ê–Ω–¥—Ä—ñ–π")
    reply2 = Comment("–©–æ –≤ –Ω—ñ–π —á—É–¥–æ–≤–æ–≥–æ?", "–ú–∞—Ä–∏–Ω–∞")
    
    # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–æ –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—è
    root_comment.add_reply(reply1)
    root_comment.add_reply(reply2)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ reply1
    reply1_1 = Comment("–ù–µ –∫–Ω–∏–∂–∫–∞, –∞ –ø–µ—Ä–µ–≤–µ–ª–∏ –∫—É–ø—É –ø–∞–ø–µ—Ä—É –Ω—ñ –Ω–∞—â–æ...", "–°–µ—Ä–≥—ñ–π")
    reply1.add_reply(reply1_1)
    
    # –í–∏–¥–∞–ª—è—î–º–æ reply1
    reply1.remove_reply()
    
    return root_comment


def create_complex_discussion():
    """–°—Ç–≤–æ—Ä—é—î —Å–∫–ª–∞–¥–Ω—ñ—à–µ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π"""
    root = Comment("–•—Ç–æ –¥–∏–≤–∏–≤—Å—è –Ω–æ–≤–∏–π —Ñ—ñ–ª—å–º?", "–û–ª–µ–∫—Å—ñ–π")
    
    # –ü–µ—Ä—à–∞ –≥—ñ–ª–∫–∞ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è
    reply1 = Comment("–î–∏–≤–∏–≤—Å—è –≤—á–æ—Ä–∞, –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä!", "–ú–∞—Ä—ñ—è")
    reply1_1 = Comment("–ê —â–æ —Å–∞–º–µ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—è?", "–î–º–∏—Ç—Ä–æ")
    reply1_1_1 = Comment("–°—é–∂–µ—Ç —ñ –∞–∫—Ç–æ—Ä—Å—å–∫–∞ –≥—Ä–∞ –Ω–∞ –≤–∏—Å–æ—Ç—ñ", "–ú–∞—Ä—ñ—è")
    reply1_1_2 = Comment("–ü–æ–≥–æ–¥–∂—É—é—Å—è, –æ—Å–æ–±–ª–∏–≤–æ –≥–æ–ª–æ–≤–Ω–∏–π –∞–∫—Ç–æ—Ä", "–ê–Ω–Ω–∞")
    
    reply1.add_reply(reply1_1)
    reply1_1.add_reply(reply1_1_1)
    reply1_1.add_reply(reply1_1_2)
    
    # –î—Ä—É–≥–∞ –≥—ñ–ª–∫–∞ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è
    reply2 = Comment("–ú–µ–Ω—ñ –Ω–µ —Å–ø–æ–¥–æ–±–∞–≤—Å—è, –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∏–π", "–ü–µ—Ç—Ä–æ")
    reply2_1 = Comment("–¢–∞ –Ω—ñ, –Ω–æ—Ä–º–∞–ª—å–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å", "–Ü–≥–æ—Ä")
    reply2_1_1 = Comment("–î–ª—è —Ç–∞–∫–æ–≥–æ –∂–∞–Ω—Ä—É - —Ç–∞–∫", "–ü–µ—Ç—Ä–æ")
    
    reply2.add_reply(reply2_1)
    reply2_1.add_reply(reply2_1_1)
    
    # –¢—Ä–µ—Ç—è –≥—ñ–ª–∫–∞
    reply3 = Comment("–î–µ –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è?", "–°–≤—ñ—Ç–ª–∞–Ω–∞")
    reply3_1 = Comment("–£ –∫—ñ–Ω–æ—Ç–µ–∞—Ç—Ä–∞—Ö —â–µ –π–¥–µ", "–í–æ–ª–æ–¥–∏–º–∏—Ä")
    reply3_2 = Comment("–Ü –æ–Ω–ª–∞–π–Ω –≤–∂–µ —î", "–¢–µ—Ç—è–Ω–∞")
    
    reply3.add_reply(reply3_1)
    reply3.add_reply(reply3_2)
    
    # –î–æ–¥–∞—î–º–æ –≤—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–æ –∫–æ—Ä–µ–Ω—è
    root.add_reply(reply1)
    root.add_reply(reply2)
    root.add_reply(reply3)
    
    return root


def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤"""
    print("üí¨ –ó–∞–≤–¥–∞–Ω–Ω—è 4: –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∑ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é")
    print("=" * 70)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–∏–∫–ª–∞–¥ –∑ —É–º–æ–≤–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
    print("üìù –ü—Ä–∏–∫–ª–∞–¥ –∑ —É–º–æ–≤–∏ –∑–∞–≤–¥–∞–Ω–Ω—è:")
    print("-" * 40)
    
    root_comment = create_sample_discussion()
    root_comment.display()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–∏–∫–ª–∞–¥—É
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è:")
    print(f"   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {root_comment.count_replies()}")
    print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≥–ª–∏–±–∏–Ω–∞: {root_comment.get_max_depth()}")
    print(f"   –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –∞–≤—Ç–æ—Ä–∏: {', '.join(sorted(root_comment.get_all_authors()))}")
    
    # –°–∫–ª–∞–¥–Ω—ñ—à–∏–π –ø—Ä–∏–∫–ª–∞–¥
    print(f"\n" + "=" * 70)
    print("üó£Ô∏è  –°–∫–ª–∞–¥–Ω—ñ—à–∏–π –ø—Ä–∏–∫–ª–∞–¥ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è:")
    print("-" * 40)
    
    complex_discussion = create_complex_discussion()
    complex_discussion.display()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–ª–∞–¥–Ω–æ–≥–æ –ø—Ä–∏–∫–ª–∞–¥—É
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–ª–∞–¥–Ω–æ–≥–æ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è:")
    print(f"   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {complex_discussion.count_replies()}")
    print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≥–ª–∏–±–∏–Ω–∞: {complex_discussion.get_max_depth()}")
    authors = complex_discussion.get_all_authors()
    print(f"   –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –∞–≤—Ç–æ—Ä–∏ ({len(authors)}): {', '.join(sorted(authors))}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ—à—É–∫—É
    print(f"\nüîç –ü–æ—à—É–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤:")
    maria_comments = complex_discussion.find_replies_by_author("–ú–∞—Ä—ñ—è")
    print(f"   –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –≤—ñ–¥ –ú–∞—Ä—ñ—ó ({len(maria_comments)}):")
    for i, comment in enumerate(maria_comments, 1):
        print(f"     {i}. \"{comment.text}\"")
    
    petro_comments = complex_discussion.find_replies_by_author("–ü–µ—Ç—Ä–æ")
    print(f"   –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –≤—ñ–¥ –ü–µ—Ç—Ä–∞ ({len(petro_comments)}):")
    for i, comment in enumerate(petro_comments, 1):
        print(f"     {i}. \"{comment.text}\"")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    print(f"\nüóëÔ∏è  –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤:")
    print("–í–∏–¥–∞–ª—è—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä –ü–µ—Ç—Ä–∞...")
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –≤–∏–¥–∞–ª—è—î–º–æ –ø–µ—Ä—à–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä –ü–µ—Ç—Ä–∞
    if petro_comments:
        petro_comments[0].remove_reply()
    
    print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:")
    complex_discussion.display()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    print(f"\nüíæ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:")
    discussion_dict = complex_discussion.to_dict()
    print("–û–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–æ –≤ —Å–ª–æ–≤–Ω–∏–∫ (–ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ —Ä—ñ–≤–Ω—ñ):")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–ª–æ–≤–Ω–∏–∫–∞
    print(f"–ö–æ—Ä—ñ–Ω—å: {discussion_dict['author']}: \"{discussion_dict['text']}\"")
    print(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {len(discussion_dict['replies'])}")
    
    # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —Å–ª–æ–≤–Ω–∏–∫–∞
    restored_discussion = Comment.from_dict(discussion_dict)
    print("\n–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–µ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è:")
    restored_discussion.display()
    
    print(f"\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ!")
    print("–†–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤—Å—ñ –≤–∏–º–æ–≥–∏:")
    print("‚Ä¢ –ö–ª–∞—Å Comment –∑ —Ç–µ–∫—Å—Ç–æ–º, –∞–≤—Ç–æ—Ä–æ–º —Ç–∞ —Å–ø–∏—Å–∫–æ–º –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π")
    print("‚Ä¢ –ú–µ—Ç–æ–¥ add_reply –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π")
    print("‚Ä¢ –ú–µ—Ç–æ–¥ remove_reply –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤")
    print("‚Ä¢ –ú–µ—Ç–æ–¥ display –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –≤–∏–≤–æ–¥—É –∑ –≤—ñ–¥—Å—Ç—É–ø–∞–º–∏")
    print("‚Ä¢ –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ç–∞ —Ä–æ–±–æ—Ç–∏ –∑ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è–º–∏")


if __name__ == "__main__":
    main()
