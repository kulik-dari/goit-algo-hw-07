#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è #7
–î–µ—Ä–µ–≤–∞ —Ç–∞ –±–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è
"""

import sys
import time
import traceback

def run_task(task_name, task_function):
    """
    –ó–∞–ø—É—Å–∫–∞—î –æ–∫—Ä–µ–º–µ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
    
    Args:
        task_name (str): –ù–∞–∑–≤–∞ –∑–∞–≤–¥–∞–Ω–Ω—è
        task_function (callable): –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
    
    Returns:
        bool: True —è–∫—â–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ, False —ñ–Ω–∞–∫—à–µ
    """
    print(f"\n{'='*70}")
    print(f"üöÄ {task_name}")
    print(f"{'='*70}")
    
    try:
        start_time = time.time()
        task_function()
        end_time = time.time()
        
        execution_time = end_time - start_time
        print(f"\n‚úÖ {task_name} –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: {execution_time:.3f} —Å–µ–∫—É–Ω–¥")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ {task_name}:")
        print(f"   {str(e)}")
        print("\n–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É:")
        traceback.print_exc()
        return False

def task1_main():
    """–ó–∞–ø—É—Å–∫ –∑–∞–≤–¥–∞–Ω–Ω—è 1: –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è"""
    # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è 1
    try:
        import task1
        if hasattr(task1, 'main'):
            task1.main()
        else:
            print("–§—É–Ω–∫—Ü—ñ—è main() –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ task1.py")
            # –Ø–∫—â–æ main() –≤—ñ–¥—Å—É—Ç–Ω—è, —Å–ø—Ä–æ–±—É—î–º–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –±–∞–∑–æ–≤–∏–π –∫–æ–¥
            exec(open('task1.py').read())
    except ImportError:
        print("‚ùå –§–∞–π–ª task1.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        raise

def task2_main():
    """–ó–∞–ø—É—Å–∫ –∑–∞–≤–¥–∞–Ω–Ω—è 2: –ü–æ—à—É–∫ –Ω–∞–π–º–µ–Ω—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è"""
    try:
        import task2
        if hasattr(task2, 'main'):
            task2.main()
        else:
            print("–§—É–Ω–∫—Ü—ñ—è main() –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ task2.py")
            exec(open('task2.py').read())
    except ImportError:
        print("‚ùå –§–∞–π–ª task2.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        raise

def task3_main():
    """–ó–∞–ø—É—Å–∫ –∑–∞–≤–¥–∞–Ω–Ω—è 3: –°—É–º–∞ –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å"""
    try:
        import task3
        if hasattr(task3, 'main'):
            task3.main()
        else:
            print("–§—É–Ω–∫—Ü—ñ—è main() –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ task3.py")
            exec(open('task3.py').read())
    except ImportError:
        print("‚ùå –§–∞–π–ª task3.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        raise

def task4_main():
    """–ó–∞–ø—É—Å–∫ –∑–∞–≤–¥–∞–Ω–Ω—è 4: –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤"""
    try:
        import task4
        if hasattr(task4, 'main'):
            task4.main()
        else:
            print("–§—É–Ω–∫—Ü—ñ—è main() –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ task4.py")
            exec(open('task4.py').read())
    except ImportError:
        print("‚ùå –§–∞–π–ª task4.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        print("üí° –ó–∞–≤–¥–∞–Ω–Ω—è 4 —î –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ...")
        return

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å"""
    print("üå≥ –î–û–ú–ê–®–ù–Ñ –ó–ê–í–î–ê–ù–ù–Ø #7: –î–ï–†–ï–í–ê –¢–ê –ë–ê–õ–ê–ù–°–£–í–ê–ù–ù–Ø")
    print("–í–∏–∫–æ–Ω–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å")
    print("=" * 70)
    
    # –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
    tasks = [
        ("–ó–ê–í–î–ê–ù–ù–Ø 1: –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –¥–µ—Ä–µ–≤—ñ", task1_main),
        ("–ó–ê–í–î–ê–ù–ù–Ø 2: –ü–æ—à—É–∫ –Ω–∞–π–º–µ–Ω—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –¥–µ—Ä–µ–≤—ñ", task2_main),
        ("–ó–ê–í–î–ê–ù–ù–Ø 3: –°—É–º–∞ –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å —É –¥–µ—Ä–µ–≤—ñ", task3_main),
        ("–ó–ê–í–î–ê–ù–ù–Ø 4: –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)", task4_main)
    ]
    
    results = []
    total_start_time = time.time()
    
    # –í–∏–∫–æ–Ω—É—î–º–æ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
    for task_name, task_function in tasks:
        success = run_task(task_name, task_function)
        results.append((task_name, success))
        
        # –ü–∞—É–∑–∞ –º—ñ–∂ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–≥–ª—è–¥—É
        if success:
            if task_name != tasks[-1][0]:  # –ù–µ –ø–∞—É–∑–∏–º–æ –ø—ñ—Å–ª—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
                try:
                    input("\n‚è∏Ô∏è  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è...")
                except KeyboardInterrupt:
                    print("\n\n‚ö†Ô∏è  –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
                    break
        else:
            # –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –ø–∏—Ç–∞—î–º–æ —á–∏ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏
            try:
                user_choice = input("\n‚ùì –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ–Ω—à–∏—Ö –∑–∞–≤–¥–∞–Ω—å? (y/n): ")
                if user_choice.lower() not in ['y', 'yes', '—Ç–∞–∫', '—Ç']:
                    break
            except KeyboardInterrupt:
                print("\n\n‚ö†Ô∏è  –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
                break
    
    total_end_time = time.time()
    total_time = total_end_time - total_start_time
    
    # –í–∏–≤–æ–¥–∏–º–æ –ø—ñ–¥—Å—É–º–∫–∏
    print(f"\n{'='*70}")
    print("üìä –ü–Ü–î–°–£–ú–ö–ò –í–ò–ö–û–ù–ê–ù–ù–Ø –î–û–ú–ê–®–ù–¨–û–ì–û –ó–ê–í–î–ê–ù–ù–Ø")
    print(f"{'='*70}")
    
    successful_tasks = 0
    for task_name, success in results:
        status = "‚úÖ –£—Å–ø—ñ—à–Ω–æ" if success else "‚ùå –ü–æ–º–∏–ª–∫–∞"
        print(f"{status} - {task_name}")
        if success:
            successful_tasks += 1
    
    
    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    print(f"\nüìã –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
    print("   ‚Ä¢ –í—Å—ñ —Ñ–∞–π–ª–∏ –∑–∞–≤–¥–∞–Ω—å –º–∞—é—Ç—å –±—É—Ç–∏ –≤ –æ–¥–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó")
    print("   ‚Ä¢ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ Python 3.7+ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    print("   ‚Ä¢ –î–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è 4 –ø–æ—Ç—Ä—ñ–±–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ collections (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞)")
    
    return successful_tasks == len([t for t in tasks if "–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ" not in t[0]])

def interactive_mode():
    """–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —Ä–µ–∂–∏–º –≤–∏–±–æ—Ä—É –∑–∞–≤–¥–∞–Ω—å"""
    print("üîÑ –Ü–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ò–ô –†–ï–ñ–ò–ú")
    print("–í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:")
    print("1. –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è")
    print("2. –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ü–æ—à—É–∫ –Ω–∞–π–º–µ–Ω—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è") 
    print("3. –ó–∞–≤–¥–∞–Ω–Ω—è 3: –°—É–º–∞ –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å")
    print("4. –ó–∞–≤–¥–∞–Ω–Ω—è 4: –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤")
    print("5. –í–∏–∫–æ–Ω–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
    print("0. –í–∏—Ö—ñ–¥")
    
    tasks_map = {
        '1': ("–ó–ê–í–î–ê–ù–ù–Ø 1", task1_main),
        '2': ("–ó–ê–í–î–ê–ù–ù–Ø 2", task2_main),
        '3': ("–ó–ê–í–î–ê–ù–ù–Ø 3", task3_main),
        '4': ("–ó–ê–í–î–ê–ù–ù–Ø 4", task4_main),
        '5': ("–í–°–Ü –ó–ê–í–î–ê–ù–ù–Ø", main)
    }
    
    while True:
        try:
            choice = input("\n–í–∞—à –≤–∏–±—ñ—Ä (0-5): ").strip()
            
            if choice == '0':
                print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
                break
            elif choice in tasks_map:
                task_name, task_function = tasks_map[choice]
                if choice == '5':
                    task_function()
                    break
                else:
                    run_task(task_name, task_function)
            else:
                print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
                
        except KeyboardInterrupt:
            print("\n\n‚ö†Ô∏è  –ü—Ä–æ–≥—Ä–∞–º–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
            break
        except EOFError:
            print("\n\nüëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break

if __name__ == "__main__":
    print("üå≥ –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è #7: –î–µ—Ä–µ–≤–∞ —Ç–∞ –±–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    if len(sys.argv) > 1:
        if sys.argv[1] == "--interactive" or sys.argv[1] == "-i":
            interactive_mode()
        elif sys.argv[1] == "--help" or sys.argv[1] == "-h":
            print("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:")
            print("  python3 all_tasks.py           # –í–∏–∫–æ–Ω–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
            print("  python3 all_tasks.py -i        # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —Ä–µ–∂–∏–º")
            print("  python3 all_tasks.py --help    # –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É")
        else:
            print(f"‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: {sys.argv[1]}")
            print("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ --help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏")
    else:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        try:
            success = main()
            sys.exit(0 if success else 1)
        except KeyboardInterrupt:
            print("\n\n‚ö†Ô∏è  –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
            sys.exit(1)
